##########################################################################
## Utilities.
def unindent(s)
  return s.gsub(/^\s+/, '')
  end

# ファイルが存在しているか否かの確認
def remote_file_exists?(full_path)
  'true' ==  capture("if [ -e #{full_path} ]; then echo 'true'; fi").strip
end

#############################################################################
## ROLES.

role :server, ''

set :user, 'ec2-user'
set :sudo_password, ''

default_run_options[:pty] = true

ssh_options[:keys] = %w(/Users/ryo/.ssh/default-AWS-US-West.pem)
ssh_options[:auth_methods] = %w(publickey)

set :use_sudo, true


#############################################################################
## Attribute.

# fswiki の本体がインストールされる Directory
set :_MAIN_DIRECTORY, '/var/www/cgi-bin/wiki'

# バックアップを取得する Directory
set :_BACKUP_DIRECTORY, '/opt/wiki'

# バックアップファイルを保存する s3 buckets
set :_S3_BUCKETS, 'ogata_buckets'

# バックアップしたファイル名
set :_BACKUPED_FILE, 'wiki.tgz'


#############################################################################
## TASKS.
task :whoami do
	run "#{sudo :as => 'root'} whoami"
end


desc "Initalize bash configuration ( put .inputrc )"
task :bash_conf do
    # root ユーザの為の設定
        put unindent(<<-'CONF'), '/tmp/.inputrc'
                Control-p: history-search-backward
                set show-all-if-ambiguous on
        CONF
        run 'sudo cp /tmp/.inputrc /root'

    # Ubuntu の場合の処理
    if user == 'ubuntu' then
        run <<-CMD
            cp /tmp/.inputrc /home/ubuntu
        CMD
    end
end


namespace :fswiki do

desc "install fswiki"
task :install do

	# fswiki インストールの事前準備
	run 'sudo yum -y install httpd perl-CGI'

	# Source の Download と展開
        unless remote_file_exists?("/tmp/wiki3_6_4.zip")
                run "wget -P /tmp 'http://sourceforge.jp/frs/redir.php?m=jaist&f=%2Ffswiki%2F48737%2Fwiki3_6_4.zip'"
        end
        run 'unzip -n -d /tmp /tmp/wiki3_6_4.zip'

	# httpd の設定追加
	run 'sudo sed -i "/^<Directory \"\/var\/www\/cgi-bin\">/a AddHandler text/css .css " /etc/httpd/conf/httpd.conf' 

	# Default のままで利用する Director の準備
        run <<-CMD
		sudo mkdir -p #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/docs #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/lib #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/plugin #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/theme #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/tmpl #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/setup.dat #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/setup.sh #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/wiki.cgi #{_MAIN_DIRECTORY}
	CMD

	# Backup 取得用の Directory の準備
        run <<-CMD
		sudo mkdir #{_BACKUP_DIRECTORY} &&
		sudo mkdir #{_BACKUP_DIRECTORY}/attach &&
		sudo mkdir #{_BACKUP_DIRECTORY}/config &&
		sudo mkdir #{_BACKUP_DIRECTORY}/backup &&
		sudo mkdir #{_BACKUP_DIRECTORY}/data &&
		sudo mkdir #{_BACKUP_DIRECTORY}/log &&
		sudo mkdir #{_BACKUP_DIRECTORY}/pdf &&
		sudo mkdir #{_BACKUP_DIRECTORY}/plugin && # Default ではない、追加した plugin 用の Directory
		sudo ln -s #{_BACKUP_DIRECTORY}/attach #{_MAIN_DIRECTORY} &&
		sudo ln -s #{_BACKUP_DIRECTORY}/backup #{_MAIN_DIRECTORY} &&
		sudo ln -s #{_BACKUP_DIRECTORY}/log #{_MAIN_DIRECTORY} &&
		sudo ln -s #{_BACKUP_DIRECTORY}/pdf #{_MAIN_DIRECTORY} &&
		sudo ln -s #{_BACKUP_DIRECTORY}/config #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/config/* #{_BACKUP_DIRECTORY}/config &&
		sudo ln -s #{_BACKUP_DIRECTORY}/data #{_MAIN_DIRECTORY} &&
		sudo mv /tmp/wiki3_6_4/data/* #{_BACKUP_DIRECTORY}/data/
	CMD

	# パッチの適用
        run <<-CMD
		# patch fswiki-patch-20110813 の適用
		wget -P /tmp 'http://sourceforge.jp/frs/redir.php?m=jaist&f=%2Ffswiki%2F48737%2Ffswiki-patch-20110813.zip' &&
		unzip -d /tmp /tmp/fswiki-patch-20110813.zip &&
		sudo cp /tmp/fswiki-patch-20110813/lib/Util.pm #{_MAIN_DIRECTORY}/lib &&
	
		# patch fswiki-pache-20110823 の適用
		wget -P /tmp 'http://sourceforge.jp/frs/redir.php?m=iij&f=%2Ffswiki%2F48737%2Ffswiki-pache-20110823.zip' &&
		unzip -d /tmp /tmp/fswiki-pache-20110823.zip &&
		sudo cp /tmp/fswiki-pache-20110823/lib/Wiki/InterWiki.pm #{_MAIN_DIRECTORY}/lib/Wiki/
	CMD

	# setup スクリプトの実行
        run <<-CMD
		cd #{_MAIN_DIRECTORY} ; sudo ./setup.sh
	CMD

	# パーミッションの変更
        run <<-CMD
		sudo chown -R apache #{_MAIN_DIRECTORY} &&
		sudo chown -R apache #{_BACKUP_DIRECTORY}
	CMD

	# httpd の起動
	run 'sudo /etc/init.d/httpd start'

	# http://<Instance Public DNS>/cgi-bin/wiki/wiki.cgi にアクセス
end


desc "Restore Data from Backuped file in S3 Buckets"
task :restore do
	# S3 に保存しているデータを Download して展開
	unless remote_file_exists?("/tmp/#{_BACKUPED_FILE}")
		run <<-CMD
			sudo s3cmd get s3://#{_S3_BUCKETS}/#{_BACKUPED_FILE} /tmp &&
			sudo tar xzpvf /tmp/#{_BACKUPED_FILE} -C /opt
		CMD
	end

	# plugin 用の link を作成
	run "ls /opt/wiki/plugin | sudo xargs -I 'STRINGS' ln -s /opt/wiki/plugin/'STRINGS' /var/www/cgi-bin/wiki/plugin/'STRINGS'"
end

end	# End of namespace


desc "Install s3cmd"
task :install_s3cmd do
        # Attribute の設定
	ACCESS_KEY = 'AKIAIBDKUGDA27I4VB5A'
	SECRET_KEY = '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'

	# python-magic のインストール
	run 'sudo yum -y install python-magic'

	# s3cmd の Download とインストール
	unless remote_file_exists?("/tmp/s3cmd-1.1.0-beta3.zip")
		run "wget -P /tmp 'http://downloads.sourceforge.net/project/s3tools/s3cmd/1.1.0-beta3/s3cmd-1.1.0-beta3.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.1.0-beta3%2F&ts=1351065122&use_mirror=jaist'"
		run 'unzip -n -d /tmp /tmp/s3cmd-1.1.0-beta3.zip'
		run 'cd /tmp/s3cmd-1.1.0-beta3 ; sudo python setup.py install'
	end

	# .s3cmd の設置
       	put unindent(<<-CONF), "/tmp/.s3cfg"
		[default]
		access_key = #{ACCESS_KEY}
		bucket_location = US
		cloudfront_host = cloudfront.amazonaws.com
		default_mime_type = binary/octet-stream
		delete_removed = False
		dry_run = False
		enable_multipart = True
		encoding = UTF-8
		encrypt = False
		follow_symlinks = False
		force = False
		get_continue = False
		gpg_command = /usr/bin/gpg
		gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
		gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
		gpg_passphrase =
		guess_mime_type = True
		host_base = s3.amazonaws.com
		host_bucket = %(bucket)s.s3.amazonaws.com
		human_readable_sizes = False
		invalidate_on_cf = False
		list_md5 = False
		log_target_prefix =
		mime_type =
		multipart_chunk_size_mb = 15
		preserve_attrs = True
		progress_meter = True
		proxy_host =
		proxy_port = 0
		recursive = False
		recv_chunk = 4096
		reduced_redundancy = False
		secret_key = #{SECRET_KEY}
		send_chunk = 4096
		simpledb_host = sdb.amazonaws.com
		skip_existing = False
		socket_timeout = 300
		urlencoding_mode = normal
		use_https = False
		verbosity = WARNING
		website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/
		website_error =
		website_index = index.html
       	CONF
       	run 'sudo mv /tmp/.s3cfg /root'
	run 'sudo chown root:root /root/.s3cfg'
	run 'sudo chmod 600 /root/.s3cfg'
end
