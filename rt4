##########################################################################
## Support. 	AMI: RightImage_CentOS_6.3_x64_v5.8.8 (ami-01496d44)    


#############################################################################
## Settins.
load 'config.rb'
load 'awstool'
load 'sys_ntp'
load 'web_apache'
load 'db_mysql'
load 'yum'


#############################################################################
## Attribute.

# バックアップファイルを保存する S3 buckets
set :_S3_BUCKETS_NAME, 'ogata_buckets'

# バックアップする DB の Prefix
# バックアップファイルは Prefix + date の形式で保存される
# ( e.g rt4_database201210262316.tgz )
set :_BACKUPED_DB_PREFIX, 'rt4_database'

# バックアップを取得する Directory ( awstool:setup_backupconf )
set :_BACKUP_DIRECTORY, '/opt/rt4/local'

# バックアップするファイル名の Prefix
# バックアップファイルは Prefix + date の形式で保存される
# ( e.g rt4_local201210262316.tgz )
set :_BACKUPED_FILE_PREFIX, 'rt4_local'

# Request Tracker の Source の選択
# ( 4.0.0 - 4.0.8 がインストール可能 )
set :_RT_SOURCE, 'rt-4.0.8.tar.gz'

# RT4 用 DB 名
set :_DB_NAME, 'rt4'

#############################################################################
namespace :serverTemplate do

# RT4 のクリーンインストール
desc "Build RT4 Server"
task :install do
	sys_ntp.setup_JST
	yum.setup_epel
	yum.setup_rpmforge
        awstool.setup_s3cmd
        awstool.setup_backupconf
        awstool.setup_backup_file_and_db_script
        awstool.setup_shutdowntime_run_backupscript
        awstool.do_tar_schedule_enable
	db_mysql.install_mysql_5_5
	db_mysql.operationalTask.do_start
	web_apache.install_apache
	rt4.install_packages
	rt4.setup_rt4
	rt4.setup_httpconf
	web_apache.operationalTask.do_restart
	rt4.puts_messages
end

end # End of namespace :serverTemplate


#############################################################################
## TASKS.

namespace :rt4 do

### Boot Task ###

desc "Install RT 4 PreRequire Package install"
task :install_packages do
	# 事前に必要なパッケージをインストール
	packages = %w[
		perl perl-CPAN
		cpp gcc* autoconf* automake* libtool m4 make
		gd gd-devel libpng libpng-devel libjpeg libjpeg-devel freetype freetype-devel
	]
	run "sudo yum -y install #{packages.join(' ')}"

	# その他パッケージのインストール
	packages = %w[
		perl-CSS-* perl-MIME-Types perl-Text* perl-XML-RSS perl-MIME-tools perl-GD
		perl-GDGraph perl-CGI* perl-TermReadKey perl-Time-modules perl-Class-ReturnValue
		perl-Text-Quoted perl-Module-Versions-Report perl-Apache-Session-Wrapper 
		perl-Cache-Simple-TimedExpiry perl-Calendar-Simple perl-HTML-Scrubber
		perl-HTML-Tree perl-HTML-Format perl-Regexp* perl-Net-Server
		perl-PerlIO-eol perl-Locale-Maketext-Fuzzy perl-Locale-Maketext-Lexicon
		perl-HTTP-Server-Simple perl-HTTP-Server-Simple-Mason perl-File-ShareDir
		perl-Email-Address perl-DBIx-SearchBuilder perl-Moose perl-Data-ICal
		perl-Log-Dispatch perl-Tree-Simple fcgi-perl perl-IPC-Run3
		perl-GnuPG-Interface perl-FCGI* perl-JSON* perl-Net-CIDR mod_fastcgi
		perl-JavaScript-Minifier perl-DBD-MySQL
	]
	run "sudo yum -y install #{packages.join(' ')}"

	# rpmforge-extras からインストール
	packages = %w[
		perl-Class-Accessor perl-Plack
	]
	run "sudo yum -y --enablerepo=rpmforge-extras install #{packages.join(' ')}"

	# CPAN 経由にてインストール
	packages = %w[
		CGI::PSGI Encode HTML::RewriteAttributes URI HTML::Mason
		HTML::Mason::PSGIHandler Plack::Handler::Starlet 
		Convert::Color Regexp::IPv6 HTML::Quoted DBIx::SearchBuilder
		FCGI
	]
	run "yes | cpan #{packages.join(' ')}"
end


task :setup_rt4 do
        RT_DIR = _RT_SOURCE.slice(0..7)

	run <<-CMD
		cd /usr/local/src ; wget http://download.bestpractical.com/pub/rt/release/#{_RT_SOURCE} ; tar xzpvf #{_RT_SOURCE} &&
		cd /usr/local/src/#{RT_DIR} ; pwd
		cd /usr/local/src/#{RT_DIR} ; sh configure ; make install
		chmod -R u+rwX,go-w,go+rX /opt/rt4/share/html /opt/rt4/local/html /opt/rt4/share/po /opt/rt4/local/po
		chown -R root /opt/rt4/share/html /opt/rt4/local/html /opt/rt4/share/po /opt/rt4/local/po
		chgrp -R bin /opt/rt4/share/html /opt/rt4/local/html /opt/rt4/share/po /opt/rt4/local/po
		chmod 0770 /opt/rt4/var/mason_data /opt/rt4/var/session_data
		chown -R apache /opt/rt4/var/mason_data /opt/rt4/var/session_data
		chgrp -R apache /opt/rt4/var/mason_data /opt/rt4/var/session_data
		cd /usr/local/src/#{RT_DIR} ; echo | make initialize-database
	CMD
end


task :setup_httpconf do
	put unindent(<<-'CONF'), '/etc/httpd/conf.d/rt.conf'
		<VirtualHost *:80>
		### Optional apache logs for RT
		# Ensure that your log rotation scripts know about these files
		# ErrorLog /opt/rt4/var/log/apache2.error
		# TransferLog /opt/rt4/var/log/apache2.access
		# LogLevel debug

		AddDefaultCharset UTF-8

		Alias /NoAuth/images/ /opt/rt4/share/html/NoAuth/images/
		ScriptAlias / /opt/rt4/sbin/rt-server.fcgi/

		DocumentRoot "/opt/rt4/share/html"
		<Location />
		Order allow,deny
		Allow from all
		Options +ExecCGI
		AddHandler fastcgi-script fcgi
		</Location>
		</VirtualHost>
	CONF
end

task :puts_messages do
# インスタンスに割り当てられている Public の Hostname を取得
        PUBLIC_DNS = capture("curl http://169.254.169.254/latest/meta-data/public-hostname")

        # メッセージの出力
        puts
        puts "http://#{PUBLIC_DNS}"
        puts "にアクセスしてログイン"
        puts
	puts "名前: root"
	puts "パスワード: password"
	puts "でログイン"
        puts
end

end # End of namespace :rt4 do
