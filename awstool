##########################################################################
## Utilities.
def unindent(s)
  return s.gsub(/^\s+/, '')
  end


#############################################################################
## Settins:
load 'config.rb'


#############################################################################
## Attribute.

# 下記 Attribute は config.rb に記載している
#set :_ACCESS_KEY
#set :_SECRET_KEY
#set :_AWS_CERT
#set :_AWS_PK


#############################################################################
## TASKS.
task :whoami do
	run "#{sudo :as => 'root'} whoami"
end


desc "Install AWS CERT & PRIVATE_KEY"
task :pem_install do
	put unindent(<<-CERT), '/tmp/cert.pem'
		-----BEGIN CERTIFICATE-----
		#{_AWS_CERT}
		-----END CERTIFICATE-----
	CERT
	run 'sudo cp /tmp/cert.pem /root'
	run 'sudo rm -rf /tmp/cert.pem'
	put unindent(<<-PRIVATE_KEY), '/tmp/pk.pem'
		-----BEGIN PRIVATE KEY-----
		#{_AWS_PK}
		-----END PRIVATE KEY-----
	PRIVATE_KEY
	run 'sudo cp /tmp/pk.pem /root'
	run 'sudo rm -rf /tmp/pk.pem'
	run 'echo EC2_PRIVATE_KEY=/root/pk.pem | sudo tee -a /root/.bash_profile'
	run 'echo EC2_CERT=/root/cert.pem | sudo tee -a /root/.bash_profile'
	run 'echo export EC2_PRIVATE_KEY EC2_CERT | sudo tee -a /root/.bash_profile'
end


desc "Install s3cmd"
task :install_s3cmd do

	# python-magic のインストール
	run 'sudo yum -y install python-magic'

	# s3cmd の Download とインストール
	unless remote_file_exists?("/tmp/s3cmd-1.1.0-beta3.zip")
		run "wget -P /tmp 'http://downloads.sourceforge.net/project/s3tools/s3cmd/1.1.0-beta3/s3cmd-1.1.0-beta3.zip?r=http%3A%2F%2Fsourceforge.net%2Fprojects%2Fs3tools%2Ffiles%2Fs3cmd%2F1.1.0-beta3%2F&ts=1351065122&use_mirror=jaist'"
		run 'unzip -n -d /tmp /tmp/s3cmd-1.1.0-beta3.zip'
		run 'cd /tmp/s3cmd-1.1.0-beta3 ; sudo python setup.py install'
	end

	# .s3cmd の設置
       	put unindent(<<-CONF), "/tmp/.s3cfg"
		[default]
		access_key = #{_ACCESS_KEY}
		bucket_location = US
		cloudfront_host = cloudfront.amazonaws.com
		default_mime_type = binary/octet-stream
		delete_removed = False
		dry_run = False
		enable_multipart = True
		encoding = UTF-8
		encrypt = False
		follow_symlinks = False
		force = False
		get_continue = False
		gpg_command = /usr/bin/gpg
		gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
		gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
		gpg_passphrase =
		guess_mime_type = True
		host_base = s3.amazonaws.com
		host_bucket = %(bucket)s.s3.amazonaws.com
		human_readable_sizes = False
		invalidate_on_cf = False
		list_md5 = False
		log_target_prefix =
		mime_type =
		multipart_chunk_size_mb = 15
		preserve_attrs = True
		progress_meter = True
		proxy_host =
		proxy_port = 0
		recursive = False
		recv_chunk = 4096
		reduced_redundancy = False
		secret_key = #{_SECRET_KEY}
		send_chunk = 4096
		simpledb_host = sdb.amazonaws.com
		skip_existing = False
		socket_timeout = 300
		urlencoding_mode = normal
		use_https = False
		verbosity = WARNING
		website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/
		website_error =
		website_index = index.html
       	CONF
       	run 'sudo mv /tmp/.s3cfg /root'
	run 'sudo chown root:root /root/.s3cfg'
	run 'sudo chmod 600 /root/.s3cfg'
end
